* tcod-rs missing get_default_background color:
** Log a github issue
** Fix upstream
** Remove the tcod_sys unsafe workaround in engine.rs
* tcod-rs wrong asserts in console::root::rect
** Unable to fill the last column and row because of an incorrect assert
** Log a github issue
** Fix upstream
** Remove the dimensions - (1, 1) workaround in engine.rs
* Victory condition: cure addiction
** Do *something* that will cure the addiction somehow
** Read up on curing addiction and see if there's any inspication
** how about reaching max will & spending certain amount of time being sober?
*** when you reach max Will, we'll show a progress bar towards victory
*** going to Withdrawal or High will reset the bar
* A high-enough Will will let you pick up & carry doses in your inventory
** But if it drops below that limit and you're carrying, you'll automatically consume a dose every turn, which will likely kill you.
* Add NPCs
** these could be "friends and family"
** they're seen as translucent ghosts you can't interact with when High
** but they can accompany you when sober
*** making monsters not attack you
*** going sober more slowly
*** pointing towards useful/interesting things/places?
* Consider adding items that could reduce the dose effect
** from strike:
#+BEGIN_QUOTE
Other ideas and dynamics that come to mind: antabus would contradict
alcohol, stims vs downers, psychedelics (and a bad trip, depending on
what you encounter while high, might lower your craving for a next
dose but hurt your peace of mind or other stats), add paranoia and
other stats, make the player's psychological and physiological
conditions more detailed and readable (feels like blundering in a
black box atm).
#+END_QUOTE
** don't need to think about this too hard for now
** just create an item called "antidose" (yep, antidote pun)
** read up on the stuff mentioned in the quote for inspiration
** but initially, just disable post-high withdrawal (and maybe switch to sober immediately)
** there are meds that ease withdrawal effects
*** so maybe you're still withdrawn, but the screen wouldn't go dark so much
*** and the fov would not reduce so much
*** and it'd take more time for you to die (or maybe you wouldn't die at all, just transition to sober)
* Spending a long time in the "normal" state can add Will
* Remove the `build` folder from the releases
** Takes up a lot of space and it's entirely unnecessary
* Consider adding a bad trip
** Small chance of that happening
** But would make things actually worse for the duration of the dose
** What would happen if you took another dose by then?
*** normal High but you risk overdosing yourself
* Victory condition: dose ascension
** from strike:
#+BEGIN_QUOTE
An alternate victory condition could be "Ascension". When you combine
all sorts of chemical fireworks flowing in your veins and brains just
the right way and don't die in the process, you'll unlock the secrets
of the mind and become a badass ghost! :o) Maybe there could be a
key/enabler/artifact or more steps and hints, depending on what theme
you wanna go with. Aliens might be interesting (like the mysterious
complex drug is secretly an alien tech, for instance). The game might
indicate how your body morphs funny and how you feel strange and "hear
voices" etc., pulling you in one direction or the other. I don't think
I can think of a third option. Except maybe if you wanted to take this
route and make the path to ascension more complex, add distractions
and false drugs that lure you astray and kill your brain cells, making
it more difficult or something. Perhaps dreamy entheogens versus hard
stims Â or whatnot, I dunno. // do research to get inspiration, wiki
and psychonaut websites are gonna be a goldmine, I'd say :p
#+END_QUOTE
** That's basically fantasy land so I'm not sure how I feel about this
*** I kind of like the idea because it provides an addict victory condition
*** Doesn't necessarily be a fantasy (consider the "golden shot" or whatever it's called)
*** Train your will enough so you can collect doses and then down like a 100 at a same time?
* Victory condition: stable addict
** Train yourself enough to be able to carry doses around
** Explore the world?
** Maybe find something that you wouldn't be able to otherwise
** "I've stopped smoking but I have a cigarette once a year"
* Make the doses more interesting
** Right now they're kind of bland: just increase SoM
** from strike:
#+BEGIN_QUOTE
perhaps pick one really interesting (or invent a new hypothetical one)
that has useable body and mind feedback for gameplay - sky's the
limit. But a generic "something you're addicted to" is too 'meh' for a
game. Some backstory would add a lot to the experience, too.
#+END_QUOTE
* The map generation shouldn't screw you over from the beginning
* Make the beginnings easier instead of throwing everything at you all at once
** Start with a handful subset of monsters, maybe less spaced-out
** Have "easy" and "hard" areas on the map but start in an easy one
* Mouse support
* Consider using just the cardinal movement
** Diagonals are hard on the beginners
** Maybe a mouse?
* Add a tutorial or something
** Either a help doc or a tutorial or something to help the beginners
* Consider medication or sobriety badges
** Instead of the 12-step bullshit
** You could come visit these centres
*** they'd feed you and somehow help you to combat the addiction
*** you could get sobriety bonuses (e.g. will increase, etc.)
* Map the "must go forward and use the dose" range directly to Will?
** It could make the place more interesting -- having move around the place
** Needs glowing irresistible areas
** It would make it clearer what happens when you gain new will
* Effects for gaining/losing will
** graphics (render it as a bar)
** consider displaying the partial will
*** say you have `Will = 5` but you've also killed three Anxieties, so your Will is more like `5.3`
*** maybe display the equivalent of the `.3` portion as a lighter bit on the Will progress bar
*** and as it gets closer to `1.0` its colour would get closer and closer to the "real Will colour"
** sound
* Consider longer-term developments of the addiction/state of mind
** like what can you do if you put off getting doses for long
** what happens when your tolerance builds up
** ideally, I'd like the gameplay to change substantially as you progress based on how you play
** also ideally with like different "gameplay curves" -- but all systems driven
* Get a small amount of "food effect" (SoM points when not high) on killing a Hunger
** Could encourage players to seek them out
** But it's obviously dangerous
** And it may cost you food if you overestimate (which fits fighting hunger)
* Ideas about the main scope / goals of the game
Finding out food and collecting it is good. More items to collect? Maybe stuff
that changes the gameplay in some way? Like the items in spelunky.

We should have some endgoal. Thematically, I can only thinking of curing the
addiction, but that seems like something of an optional difficult goal (e.g.
Hell in Spelunky). And anyway, how are we going to deal with this? Some items to
find/pick up? I was thinking something like the 12 step program but that isn't
bullshit.

Maybe finding people and getting their forgiveness/acceptance? And/or more
generally: dealing with your past.

Maybe in terms of the non-curing way... I don't know. What does an addict want?
Read through the wiki and some real stories? Despite the Marla Daniels quote,
I'd like there to be a way to complete the game. Something that keeps you exploring.

Or let's make it a survival/exploration sim. That would put a lot of the game
into the worldgen (and systems) but it seems like it could fit this. Consider
e.g. removing almost all monsters from an area, see how it plays.

Anyway, let's start with making the world bigger then one screen without actually
changing anything else at the moment. And then play it for a while and see what happens.

* Random chance that explosion destroys a wall, too?
* Ghost-like NPC becoming corporeal
** When being High, the player would see these ghost NPCs moving through the world
** When being sober, they'd become more and more corporeal
** Could point the player towards interesting places/end-game conditions, etc.
* Depression only moves by 2 squares when following the player
* Monsters that can modify the environment
** unblock passages
** block passages
** teleport the player?
* Gameplay beyond the first screen
** We need a greater pressure for exploration and leaving the area.
*** In my current playthroughs I just never care enough to leave.
*** consider tweaking the intoxication gain and drop to create stronger pressure
** Add different worlds the player can go to when leaving the map
*** this could either be completely random
*** or there may be a fixed or semi-fixed sequence (e.g. 2 tree worlds, than two other worlds, then three different worlds, etc.)
*** Some notes on different world generation:
http://gamedev.stackexchange.com/questions/31241/random-map-generation/31245#31245
** consider restricting the possible ways to leave the map
** Split a large map into sections generaded from the initial seed and their positions from center
*** My (probably fast) ad-hoc concoction:
#+BEGIN_SRC
fn position_based_seed(initial_seed: u32, x: i32, y: i32) -> u32 {
    let high = (x as u16) as u32;
    let low = (y as u16) as u32;
    let encoded_pos = high << 16 | low;
    initial_seed ^ encoded_pos
}
#+END_SRC
**** fast but produces low values for low inputs
*** Better: just feed the inputs through a hash
*** Maybe use the integer hash function by Thomas Wang
*** http://web.archive.org/web/20071223173210/http://www.concentric.net/~Ttwang/tech/inthash.htm
* Limited map size that the player has to explore [map alternative]
** spanning multiple screens
** but not infinite
** we'd have some sort of goal to find/accomplish there
** that would simplify our entity handling and mapgen
** The screen would be a view into that map
*** still need to figure out how to move inbetween screens
* More effects on High
** monsters get weaker (Dempression moving by one step per turn)
** dynamic / changing environment?
* End-goal
** Play until you die is fun while testing but we should have something to achieve
** Something along the lines of 12 steps?
*** though I'm not fond of those
*** but like some discrete steps/things to find
*** multiple endings? Fixing your addiction being the hardest one.
* Idle monsters select more distant destinations
** This should make it seem more realistic
** No longer just moving randomly back and forth
* improve level generator not to create blocked entities
* Don't allow suicide (if there's a way to avoid it)
** e.g. fatfingering the arrow when the Depression is near
* save & exit/load game
** see how nethack 4 does it:
** https://www.reddit.com/r/roguelikedev/comments/3jk3xm/faq_friday_20_saving/
** could we use something similar?
* Display the player's explored area on death
* Pure terminal renderer
** We've already added a PoC using Rustbox
** Alternative library: Termion
*** http://ticki.github.io/blog/making-terminal-applications-in-rust-with-termion/
** TODO Refresh the screen on restart
** TODO Refresh the screen on motion
** TODO Add colours
** TODO Make the engines switchable (instead of running side by side)
** TODO Handle debug messages
*** Write them to log or something?
*** Or maybe just ignore that issue once the terminal is an optional thing
* Fade out Shadows & Voices when dying after attack
** fade to Color{r: 0, g: 0, b: 0} in 400ms
* Different screen fadeout colours on various player deaths
** RED when killed by a monster
** BLACK when died of exaustion
** WHITE (slow fade, plus glitches) when overdosed
* Doses should glow
* Better display the movement of D monsters:
** they're moving too fast currently (FPS dependent)
** we should show a path trail
** and also slow them down (visually -- so like they move every say 200ms, not every tick)
* Smooth-out animations for the fade-out when growing Withdrawn
** right now, they are discrete: from fade 50 to 45 in one frame
** better make it a fade animation of say 50ms or so
* Change the rate of the `High` animation based on intoxication
** (very high: fast-paced, should slow down on the way to sobriety)
* Better effects on player's death:
** Fade out to red/black completely
** Uncover the entire map (with a reverse fade)
*** with full colours
*** showing player's corpse
* Make the graphics on Overdose death glitchy
* Better radious / FoV calculation
Instead of looking at the points' coordinates, look at the actual (pixel) space
each tile represents. The tiles are not points but squares with an area. This
should provide a visually better result (but will be harder to compute).
* Pick a good colour palette
** https://personal.sron.nl/~pault/
** http://paletton.com/
* Add the Marla Daniels quote
** When the game is launched and there aren't any saves, it should just jump into the play
*** (that was the genius of Braid)
*** (we can use the unexplored area to show help/hints)
** Any other time, we'll show the menu with the quote & the load-game option
** Possibly, we may show it during player's death, if it makes sense
* Effects on hit/death
** colour fade (or something) on stun, removed will, death, etc.
** sound
* Change player's colour on stunned/panicked
* Make sure we're accessible to colour blind people
* Maybe have a notion of a Timer struct?
** first pass just set the time and drop to zero.
** no need to store (maximum, elapsed) Durations then
* The "High" animation just kills the framerate on uncovered screen
* Use libtcod.cfg for config to libtcod.cfg
** that way we won't have to implement a lot of options UI
** http://doryen.eptalys.net/data/libtcod/doc/1.5.1/html2/parser_run.html?c=true
** should properly commented, suggesting available font options and such
** PROBLEM: if we ever switch to a different backend (e.g. pure glium) this will bite us...
*** probably better to use a toml config file if anything
** Examples:
*** font path
*** font size
*** fullscreen (yes/no)
*** key bindings
*** colour-blind mode (yes/no)
*** location to the replays
*** location to the saved games?
* Archive                                                           :ARCHIVE:
** DONE Taking a dose must always save from Depression
CLOSED: [2016-10-07 Fri 21:25]
:PROPERTIES:
:ARCHIVE_TIME: 2016-10-07 Fri 21:25
:END:
** DONE Eating food must always save from Derpession
CLOSED: [2016-10-07 Fri 21:25]
:PROPERTIES:
:ARCHIVE_TIME: 2016-10-07 Fri 21:25
:END:
** DONE Background around a dose should glow in the Irresistible radius
CLOSED: [2016-10-07 Fri 22:18]
:PROPERTIES:
:ARCHIVE_TIME: 2016-10-07 Fri 22:18
:END:
** DONE Remove the duplicate irresistible radius formula calculation
CLOSED: [2016-10-08 Sat 13:10]
:PROPERTIES:
:ARCHIVE_TIME: 2016-10-08 Sat 13:10
:END:
** DONE Remove the duplicate coordinates projection calculation in irresistible dose
CLOSED: [2016-10-08 Sat 13:22]
:PROPERTIES:
:ARCHIVE_TIME: 2016-10-08 Sat 13:22
:END:
** DONE CRASH when going somewhere left
CLOSED: [2016-10-08 Sat 14:29]
:PROPERTIES:
:ARCHIVE_TIME: 2016-10-08 Sat 14:29
:END:
cargo run -- replay-2016-10-08T13\:20\:21.431
** DONE Finer indicator of the state of mind
CLOSED: [2016-12-05 Mon 22:25]
:PROPERTIES:
:ARCHIVE_TIME: 2016-12-05 Mon 22:25
:END:
*** let's split the three states (high, sober, withdrawal)
*** have a progress bar for each
*** you replenish high by doses, when it drops to zero -> withdrawal
*** you replenish sober & withdrawal with food
*** normal going to zero -> withdrawal
*** withdrawal going to zero -> death
*** withdrawal going up -> sober
** DONE UI: make the sidebar a different colour so it's visually distinct
CLOSED: [2016-12-05 Mon 23:32]
:PROPERTIES:
:ARCHIVE_TIME: 2016-12-05 Mon 23:32
:END:
** DONE BUG: Crash on overdose
CLOSED: [2016-12-06 Tue 00:27]
:PROPERTIES:
:ARCHIVE_TIME: 2016-12-06 Tue 00:27
:END:
** DONE BUG: The screen doesn't move when going to the right edge
CLOSED: [2016-12-08 Thu 20:31]
:PROPERTIES:
:ARCHIVE_TIME: 2016-12-08 Thu 20:31
:END:
*** And but the world there still exist, so a Depression can kill you without you seeing it coming
** DONE The FOV circle should never extend beyond the edge of the screen
CLOSED: [2016-12-08 Thu 20:31]
:PROPERTIES:
:ARCHIVE_TIME: 2016-12-08 Thu 20:32
:END:
*** I.e. the player should always be able to see the full extent of their field of view
*** Which means we should trigger the screen scroll before that happens
*** And to make things predictable, let's scroll precisely when the field of view would be outside
*** That way the player can learn & anticipate it instead of being surprised
